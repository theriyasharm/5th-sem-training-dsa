#include <bits/stdc++.h>
using namespace std;

vector<int> ninjaAndSortedArrays(vector<int>& arr1, vector<int>& arr2, int m, int n) {
    int i = m - 1;  // Index for last element in arr1
    int j = n - 1;  // Index for last element in arr2
    int k = m + n - 1;  // Index for last position in merged array

    // Merge arrays from the end
    while (j >= 0) {
        if (i >= 0 && arr1[i] > arr2[j]) {
            arr1[k] = arr1[i];
            i--;
        } else {
            arr1[k] = arr2[j];
            j--;
        }
        k--;
    }
    return arr1;
}

int main() {
    // Example usage
    vector<int> arr1 = {1, 3, 5, 0, 0, 0};  // Assuming arr1 has enough space to hold merged result
    vector<int> arr2 = {2, 4, 6};
    int m = 3;  // Number of elements in arr1
    int n = 3;  // Number of elements in arr2

    vector<int> result = ninjaAndSortedArrays(arr1, arr2, m, n);

    // Print the result
    cout << "Merged array: ";
    for (int num : result) {
        cout << num << " ";
    }
    cout << endl;

    return 0;
}
