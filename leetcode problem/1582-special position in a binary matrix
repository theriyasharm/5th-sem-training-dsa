#include <iostream>
#include <vector>

using namespace std;

class Solution {
public:
    int numSpecial(vector<vector<int>>& mat) {
        int m = mat.size();
        int n = mat[0].size();
        vector<int> rowSum(m, 0);
        vector<int> colSum(n, 0);

        // Calculate sum of each row and column
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                rowSum[i] += mat[i][j];
                colSum[j] += mat[i][j];
            }
        }

        int specialCount = 0;

        // Check for special positions
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (mat[i][j] == 1 && rowSum[i] == 1 && colSum[j] == 1) {
                    specialCount++;
                }
            }
        }

        return specialCount;
    }
};

// Main function to test numSpecial function
int main() {
    Solution sol;

    // Example matrix
    vector<vector<int>> mat = {
        {0, 0, 0, 0},
        {1, 0, 0, 0},
        {0, 0, 0, 1},
        {0, 0, 0, 0}
    };

    // Call the function
    int result = sol.numSpecial(mat);

    // Print the result
    cout << "Number of special positions: " << result << endl;

    return 0;
}

